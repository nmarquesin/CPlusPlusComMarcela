tions) in an appropriately named text file.
3.1 Scope
For these questions, you are encouraged to use a computer.
1. Below is a sample program. Use it to answer the following question: What happens if
we declare the same name twice within a block, giving it two different meanings?
1 # include <iostream >
2
3 using namespace std;
4
5 int main ()
6 {
7 int arg1 ;
8 arg1 = -1;
9 int x, y, z;
10 char myDouble = '5';
11 char arg1 = 'A';
12 cout << arg1 << "\n";
13 return 0;
14 }
Hints: Did your program compile? If so, what does it print? If not, what error message
do you get?

>> The program doesn't compile and the error message says there are conflicting
declaration, as follows:

>>error: conflicting declaration 'char arg1'
>> char arg1 = 'A';
>>      ^
>>note: previous declaration as 'int arg1'
>>   int arg1 ;
>>       ^



2. Below is a sample program. Use it to answer the following question: What happens if
we declare an identifier in a block, and then redeclare that same identifier in a block
nested within that block?
1 # include <iostream >
2
3 using namespace std;
4
5 int main ()
6 {
7 int arg1 ;
8 arg1 = -1;
9 {
10 char arg1 = ’A’;
11 cout << arg1 << "\n";
12 }
13 return 0;
14 }
Hints: Did your program compile? If it does, what does the program output? If not,
what error message does it produce?

>> This time the program compiles because and outputs A. This happens because
>> C++ allows variable shadowing, that is, that an already declared variable
>> can be declared again in a different scope.

3. Below is a sample program. Use it to answer the following question: Suppose an
identifier has two different declarations, one in an outer block and one in a nested
inner block. If the name is accessed within the inner block, which declaration is used?
1 # include <iostream >
2
3 using namespace std;
4
5 int main ()
6 {
7 int arg1 ;
8 arg1 = -1;
9 {
10 char arg1 = ’A’;
11 cout << arg1 << "\n";
12 }
13 return 0;
14 }

>> The declaration in the inner block is used.

4. Below is a sample program. Use it to answer the following question: Suppose an
identifier has two different declarations, one in an outer block and one in a nested
inner block. If the name is accessed within the outer block, but after the inner block,
which declaration is used?
1 # include <iostream >
2
3 using namespace std;
4
5 int main ()
6 {
7 int arg1 ;
8 arg1 = -1;
9 {
10 char arg1 = ’A’;
11 }
12 cout << arg1 << "\n";
13 return 0;
14 }

>> The declaration in the outer block is used, because the inner scope is finished.

5. Below is a sample program that will not compile. Why not? By moving which line
can we get the code to compile?
1 using namespace std;
2
3 int main ()
4 {
5 cout << "Hello , World !\n";
6 return 0;
7 }
8
9 # include <iostream >

>> By moving line 9 to before line 1 the program will compile.
